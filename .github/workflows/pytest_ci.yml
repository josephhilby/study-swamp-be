name: Pytest Tests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: hero
          POSTGRES_PASSWORD: password
          POSTGRES_DB: study_swamp_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        python-version: ["3.11.3"]

    env:
      POSTGRES_DB: study_swamp_db
      POSTGRES_USER: hero
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: 127.0.0.1
      POSTGRES_PORT: 5432

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 .
        continue-on-error: true
      - name: Run Migrations
        run: |
          echo "Checking Postgres availability..."
          for i in {1..30}; do
            if pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT; then
              echo "Postgres is ready!"
              break
            fi
            echo "Postgres not ready yet. Waiting..."
            sleep 5
          done
          if ! pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT; then
            echo "Postgres never became ready. Dumping logs:"
            docker ps
            docker logs $(docker ps -q --filter "ancestor=postgres:latest")
            exit 1
          fi
          python3 manage.py migrate
      - name: Test with Pytest
        run: |
          pytest -s