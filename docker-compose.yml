# ----------------------------------------------
# Please run containers with container-control.sh
# ----------------------------------------------

# -------------------------------
# Shared Blocks
# -------------------------------
x-django-environment: &django-environment
  POSTGRES_HOST: db
  POSTGRES_DB: study_swamp_db
  POSTGRES_USER: hero
  POSTGRES_PASSWORD: password
  POSTGRES_PORT: 5432

x-app-volume: &app-volume
  - .:/app

x-app-dependencies: &app-dependencies
  - db

services:

  # ----------------------------------------------
  # Postgres Database Service
  # ----------------------------------------------
  db:
    image: postgres:15
    restart: always

    # Environment variables used by the Postgres container
    environment:
      <<: *django-environment

    # Persist database data between container restarts
    volumes:
      - postgres_data:/var/lib/postgresql/data

    # Expose Postgres port to the host machine (host:container)
    # Using 5433 to deconflict with local DB and allow connection with Postico 2
    ports:
      - "5433:5432"

  # ----------------------------------------------
  # Django Web Application Service
  # ----------------------------------------------
  web:
    # Build image with Dockerfile, label study-swamp-web
    build:
      context: .
    image: study-swamp-web

    # Environment variables injected into Django
    environment:
      <<: *django-environment

    # Mounts the project directory into the container for live code changes
    volumes: *app-volume

    # Exposes the Django dev server on host port 8000
    ports:
      - "8000:8000"

    # Ensures the web service waits for db to start
    depends_on: *app-dependencies

  # ----------------------------------------------
  # Initial DB setup
  # ----------------------------------------------
  init:
    # Reference existing image study-swamp-web and run...
    image: study-swamp-web
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py loaddata user.json &&
        python manage.py loaddata location.json &&
        python manage.py loaddata group.json &&
        python manage.py loaddata member.json &&
        python manage.py loaddata meeting.json &&
        python manage.py loaddata attendee.json &&
        python manage.py loaddata award.json &&
        python manage.py collectstatic --noinput
      "

    # Environment variables injected into Django
    environment:
      <<: *django-environment

    # Mounts the project directory into the container for live code changes
    volumes: *app-volume

    # Ensures the web service waits for db to start
    depends_on: *app-dependencies

# ----------------------------------------------
# Named Docker Volume for PostgreSQL Data
# ----------------------------------------------
volumes:
  postgres_data: